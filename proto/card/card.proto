syntax = "proto3";

package card;

// Card related messages and services
message Card {
  int32 id = 1;
  string name = 2;
  string biome = 3;
  string element = 4;
  string animal = 5;
  string plant = 6;
  string description = 7;
  string img_url = 8;
  string player = 9;
  string type = 10;
  string attack = 11;
  string defense = 12;
  string action = 13;
  string flavor = 14;
  string mod = 15;
}

message CardTemplate {
  string template = 1;
  repeated string animals = 2;
  repeated string plants = 3;
  repeated string elements = 4;
  repeated string descriptions = 5;
  repeated string resources = 6;
}

message GenerateCardsRequest {
  string user_id = 1;
  int32 count = 2;
}

message GenerateCardsResponse {
  repeated Card cards = 1;
}

message DeleteCardRequest {
  string user_id = 1;
  int32 card_id = 2;
}

message DeleteCardResponse {
  int32 card_id = 1;
}

message GetCardsRequest {
  string user_id = 1;
}

message GetCardsResponse {
  repeated Card cards = 1;
}

message NewCardRequest {
  string user_id = 1;
  Card card = 2;
}

message NewCardResponse {
  Card card = 1;
}

message CreateCardRequest {
  Card card = 1;
  string prompt = 2;
}

message CreateCardResponse {
  Card card = 1;
}

message CreateCardTemplateRequest {
  CardTemplate card_template = 1;
  string biome = 2;
}

message CreateCardTemplateResponse {
  CardTemplate card_template = 1;
}

message Deck {
  repeated Card cards = 1;
  string user_id = 2;
}

message GenerateDeckRequest {
  int32 num_cards = 1;
  string biome = 2;
  string user_id = 3;
}

message GenerateDeckResponse {
  Deck deck = 1;
}

message CreateDeckRequest {
  Deck deck = 1;
}

message CreateDeckResponse {
  Deck deck = 1;
}

message GetDeckRequest {
  Deck deck = 1;
}

message GetDeckResponse {
  Deck deck = 1;
}

message GetDecksRequest {
  string user_id = 1;
}

message GetDecksResponse {
  repeated Deck decks = 1;
}

message UpdateDeckRequest {
  Deck deck = 1;
}

message UpdateDeckResponse {
  Deck deck = 1;
}

message DeleteDeckRequest {
  Deck deck = 1;
}

message DeleteDeckResponse {
  Deck deck = 1;
}

service CardService {
  rpc GetCards(GetCardsRequest) returns (GetCardsResponse);
  rpc NewCard(NewCardRequest) returns (NewCardResponse);
  rpc DeleteCard(DeleteCardRequest) returns (DeleteCardResponse);
  rpc GenerateCards(GenerateCardsRequest) returns (GenerateCardsResponse);
  rpc CreateCardTemplate(CreateCardTemplateRequest) returns (CreateCardTemplateResponse);
  rpc CreateCard(CreateCardRequest) returns (CreateCardResponse);

  // rpc CreateDeck(CreateDeckRequest) returns (CreateDeckResponse);
  // rpc GetDeck(GetDeckRequest) returns (GetDeckResponse);
  // rpc UpdateDeck(UpdateDeckRequest) returns (UpdateDeckResponse);
  // rpc DeleteDeck(DeleteDeckRequest) returns (DeleteDeckResponse);
  rpc GenerateDeck(GenerateDeckRequest) returns (GenerateDeckResponse);
  rpc GetDecks(GetDecksRequest) returns (GetDecksResponse);
}
